apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "llama-stack.fullname" . }}
  labels:
    {{- include "llama-stack.labels" . | nindent 4 }}
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "llama-stack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.otelCollector.enabled }}
        sidecar.opentelemetry.io/inject: {{ .Values.otelCollector.name | default "llamastack-otelsidecar" }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "llama-stack.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: run-config-volume
          configMap:
            name: run-config
            defaultMode: 420
        - name: llama-persist
          persistentVolumeClaim:
            claimName: llama-persist
        - name: cache
          emptyDir: {}
        - name: pythain
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - '--config'
            - /app-config/config.yaml
          ports:
            - name: http
              containerPort: 8321
              protocol: TCP
          env:
            - name: MAX_TOKENS
              value: "128000"
            - name: VLLM_MAX_TOKENS
              value: "128000"
            - name: LLAMA3B_URL
              value: "http://llama3-2-3b-predictor.llama-serving.svc.cluster.local:8080/v1"
            - name: LLAMA3B_MODEL
              value: "llama3-2-3b"
            - name: VLLM_API_TOKEN
              value: "fake"
            - name: GRANITE_URL
              value: "http://sno-granite32/v1"
            - name: GRANITE_MODEL
              value: "granite-3.2-2b-instruct"
            - name: QWEN_URL
              value: "http://sno-qwen31/v1"
            - name: QWEN_MODEL
              value: "/mnt/models/Qwen3-1.7B-Q8_0.gguf"
            - name: DEEPSEEK_URL
              value: "http://sno-deepseek-qwen3-vllm-predictor.llama-serving.svc.cluster.local:8080/v1"
            - name: DEEPSEEK_MODEL
              value: "deepseek-r1-0528-qwen3-8b-bnb-4bit"
            - name: CUSTOM_TIKTOKEN_CACHE_DIR
              value: "/app/cache"
            - name: MILVUS_DB_PATH
              value: "milvus.db"
            - name: LLAMA_STACK_LOGGING
              value: "all=debug"
            - name: LLAMA_STACK_PORT
              value: "8321"
            {{- if .Values.otelCollector.enabled }}
            - name: OTEL_SERVICE_NAME
              value: llamastack
            - name: OTEL_TRACE_ENDPOINT
              value: http://otel-collector-collector.observability-hub.svc.cluster.local:4318/v1/traces
            - name: OTEL_METRIC_ENDPOINT
              value: http://otel-collector-collector.observability-hub.svc.cluster.local:4318/v1/metrics
            - name: TELEMETRY_SINKS
              value: "console, sqlite, otel_trace, otel_metric"
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: pythain
              mountPath: /pythainlp-data
            - name: run-config-volume
              mountPath: /app-config
            - name: llama-persist
              mountPath: /.llama
            - name: cache
              mountPath: /.cache
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600